---
# ######################################### Basic Parameters #######################################

# Seed for python's PRNG:
random_seed: 10

# The region in question:
region: Luxembourg

# A list of all location types:
locations:
  - House
  - Care Home
  - Agriculture
  - Extraction
  - Manufacturing
  - Energy
  - Water
  - Construction
  - Trade
  - Transport
  - Catering and Accommodation
  - ICT
  - Finance
  - Real Estate
  - Technical
  - Administration
  - Education
  - Entertainment
  - Other Services
  - Primary School Classroom
  - Secondary School Classroom
  - Restaurant
  - Outdoor
  - Car
  - Public Transport
  - Shop
  - Medical
  - Hospital
  - Hotel
  - Place of Worship
  - Indoor Sport
  - Cinema or Theatre
  - Museum or Zoo

# Activities allowed within the simulation, and the locations that may be performed at these locations
activities:
  House: [House, Care Home]
  Work: [Care Home, Agriculture, Extraction, Manufacturing, Energy, Water, Construction, Trade, Transport,
         Catering and Accommodation, ICT, Finance, Real Estate, Technical, Administration, Education, Entertainment,
         Other Services, Primary School Classroom, Secondary School Classroom, Restaurant, Public Transport, Shop, Medical, Hospital, Hotel, Place of Worship,
         Indoor Sport, Cinema or Theatre, Museum or Zoo]
  School: [Primary School Classroom, Secondary School Classroom]
  Restaurant: [Restaurant]
  Outdoor: [Outdoor]
  Car: [Car]
  Public Transport: [Public Transport]
  Shop: [Shop]
  Medical: [Medical, Hospital]
  Place of Worship: [Place of Worship]
  Indoor Sport: [Indoor Sport]
  Cinema or Theatre: [Cinema or Theatre]
  Museum or Zoo: [Museum or Zoo]
  Visit: [House, Care Home]


# ######################################### Logging ################################################

# Format is https://docs.python.org/3/library/logging.config.html#logging-config-dictschema
logging:
  version: 1
  disable_existing_loggers: False
  formatters:
    standard:
      # format: '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
      format: '[%(levelname)s] %(name)s: %(message)s'
  handlers:
    default:
      level: INFO
      formatter: standard
      class: logging.StreamHandler
      stream: 'ext://sys.stdout'  # Default is stderr
  loggers:
    '':   # root logger
      handlers: ['default']
      level: INFO
      propagate: False
#    'my.packg':
#      handlers: ['default']
#      level: INFO
#      propagate: False
#    '__main__':
#        handlers': ['default']
#        level: DEBUG
#        propagate: False

# ######################################### Output #################################################

# Output that should be rendered from the simulation:
reporters:
  cli.TimeReporter: {}
  csv.HealthStateCounts:
    filename: /tmp/health_state_counts.csv
  csv.StrainCounts:
    filename: /tmp/strain_counts.csv
  # csv.UnemployedCounts:
  #   filename: /tmp/unemployed.csv
  # csv.ActivityCounts:
  #   filename: /tmp/activity_counts.csv
  # csv.LocationTypeCounts:
  #   filename: /tmp/location_type_counts.csv
  # csv.TestingCounts:
  #   filename: /tmp/testing_counts.csv
  # csv.QuarantineCounts:
  #   filename: /tmp/quarantine_counts.csv
  # csv.TestingEvents:
  #   filename: /tmp/testing_events.csv
  # csv.ExposureEvents:
  #   filename: /tmp/exposure_events_lockdown.csv
  # csv.DeathEvents:
  #   filename: /tmp/death_events.csv
  # csv.ContactCounts:
  #   filename: /tmp/average_contact_counts.csv
  # csv.VaccinationEvents:
  #   filename: /tmp/vaccination_events.csv
  # csv.SecondaryInfectionCounts:
  #   filename: /tmp/secondary_infection_counts.csv
    #  - location_population_plots.LocationPlots:
#      dirname: /tmp/plots
#      types_to_show: []
#      health_to_show: [INFECTED]
#      figure_size: [15, 20]  # width, height
#      every_n: 1

# ######################################### Clock ##################################################

# Time length of each tick in the simulation. Weeks must contain the same number of ticks, because
# we use weekly routines. This means the week length (604800) should be divisible by the follwoing
# tick length:
tick_length_s: 600
# How long the simulation should run for, in days. Note the number of iterations will be computed
# from the tick length above:
simulation_length_days: 129
# the date at which the simulation starts:
epoch: 23th February 2020

# ######################################### Map ####################################################

map_factory:
  __type__: simple_map_factory.SimpleMapFactory
  # Seed the PRNG, Used when resampling the density matrix
  __prng_seed__: 10
  # Country code to extract from the distribution data
  country_code: LU
  # File containing initial distribution of population, and see Docs for full format:
  # FIXME: this is currently not relative to config path, but relative to pwd
  population_distribution_fp: Scenarios/Luxembourg/GEOSTAT.csv
  # Shapefile describing the borders of the country:
  # FIXME: this is currently not relative to config path, but relative to pwd
  shapefilename: Scenarios/Luxembourg/Map/LIMADM_CANTONS.shp
  # The coordinate system used in the shapefile. If this is ETRS89 (EPSG: 3035) then leave it blank:
  shapefile_coord_system: epsg:2169
  # The following density map scale factor resamples the input map to be of higher resolution,
  # linearly interpolating to produce a smoother population distribution without hard edges. Set
  # this parameter equal to 1 to do no resampling:
  res_fact: 2
  # Density map normalization rescales population within grid squares. In particular, if the
  # population of a certain grid square is zero before resampling and if this option is set True,
  # then after resampling the population of that grid square will also be zero. This is therefore a
  # modification of the linear interpolation to prevent poplation from leaking into previously
  # unpopulated squares, with the cost being the retention of some, but not all, hard edges:
  normalize_interpolation: True

# ######################################### World ##################################################

world_factory:
  __type__: simple_world_factory.SimpleWorldFactory
  # Seed the PRNG
  __prng_seed__: 10
  # Scale factor
  scale_factor: 0.25
  # Regions and populations
  regions:
    Luxembourg:
      # Distribution of resident agents by age
      age_distribution:
        - 6356  # 0 years old
        - 6604  # 1 year old
        - 6645
        - 6653
        - 6724
        - 6837
        - 6878
        - 6749
        - 6609
        - 6921
        - 6687 # 10 years old
        - 6724
        - 6593
        - 6598
        - 6499
        - 6528
        - 6435
        - 6499
        - 6674
        - 7195
        - 7140  # 20 years old
        - 7113
        - 7728
        - 8116
        - 8443
        - 8949
        - 9336
        - 9685
        - 9499
        - 10104
        - 9838 # 30 years old
        - 10090
        - 9849
        - 9989
        - 9667
        - 9708
        - 9787
        - 9922
        - 9807
        - 9927
        - 9530 # 40 years old
        - 9518
        - 9555
        - 9220
        - 9235
        - 9170
        - 8980
        - 9231
        - 9489
        - 9264
        - 9426 # 50 years old
        - 9481
        - 9503
        - 9256
        - 9334
        - 9180
        - 8898
        - 8494
        - 8181
        - 7796
        - 7547 # 60 years old
        - 7219
        - 6865
        - 6606
        - 6238
        - 6095
        - 5781
        - 5539
        - 5019
        - 5076
        - 4937 # 70 years old
        - 4811
        - 4502
        - 4199
        - 3611
        - 3557
        - 3499
        - 3320
        - 3011
        - 2905
        - 3012 # 80 years old
        - 2744
        - 2508
        - 2328
        - 2076
        - 1904
        - 1699
        - 1551
        - 1498
        - 1354
        - 1097 # 90 years old
        - 814
        - 631
        - 492
        - 375
        - 842 # 95+ years old
    Belgium:
      # Distribution of resident agents by age
      age_distribution:
        - 0  # 0 years old
        - 0  # 1 year old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 10 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 721
        - 777
        - 771 # 20 years old
        - 768
        - 835
        - 876
        - 912
        - 966
        - 1008
        - 1046
        - 1026
        - 1091
        - 1062 # 30 years old
        - 1090
        - 1064
        - 1079
        - 1044
        - 1048
        - 1057
        - 1071
        - 1059
        - 1072
        - 1029 # 40 years old
        - 1028
        - 1032
        - 996
        - 997
        - 990
        - 970
        - 997
        - 1025
        - 1000
        - 1018 # 50 years old
        - 1024
        - 1026
        - 1000
        - 1008
        - 991
        - 961
        - 917
        - 883
        - 842
        - 815 # 60 years old
        - 780
        - 741
        - 713
        - 674
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 70 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 80 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 90 years old
        - 0
        - 0
        - 0
        - 0
        - 0 # 95+ years old
    France:
      # Distribution of resident agents by age
      age_distribution:
        - 0  # 0 years old
        - 0  # 1 year old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 10 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 1518
        - 1637
        - 1625 # 20 years old
        - 1618
        - 1758
        - 1847
        - 1921
        - 2036
        - 2124
        - 2204
        - 2161
        - 2299
        - 2238 # 30 years old
        - 2296
        - 2241
        - 2273
        - 2199
        - 2209
        - 2227
        - 2257
        - 2231
        - 2259
        - 2168 # 40 years old
        - 2166
        - 2174
        - 2098
        - 2101
        - 2086
        - 2043
        - 2100
        - 2159
        - 2108
        - 2145 # 50 years old
        - 2157
        - 2162
        - 2106
        - 2124
        - 2089
        - 2025
        - 1933
        - 1861
        - 1774
        - 1717 # 60 years old
        - 1642
        - 1562
        - 1503
        - 1419
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 70 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 80 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 90 years old
        - 0
        - 0
        - 0
        - 0
        - 0 # 95+ years old
    Germany:
      # Distribution of resident agents by age
      age_distribution:
        - 0  # 0 years old
        - 0  # 1 year old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 10 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 724
        - 780
        - 774 # 20 years old
        - 772
        - 838
        - 880
        - 916
        - 971
        - 1013
        - 1051
        - 1030
        - 1096
        - 1067 # 30 years old
        - 1094
        - 1068
        - 1084
        - 1049
        - 1053
        - 1062
        - 1076
        - 1064
        - 1077
        - 1034 # 40 years old
        - 1032
        - 1036
        - 1000
        - 1002
        - 995
        - 974
        - 1001
        - 1029
        - 1005
        - 1022 # 50 years old
        - 1028
        - 1031
        - 1004
        - 1012
        - 996
        - 965
        - 921
        - 887
        - 846
        - 819 # 60 years old
        - 783
        - 745
        - 717
        - 677
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 70 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 80 years old
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0
        - 0 # 90 years old
        - 0
        - 0
        - 0
        - 0
        - 0 # 95+ years old

# ######################################### Activity ###############################################

activity_model:
  __type__: simple_activity_model.SimpleActivityModel
  __prng_seed__: 10
  # File containing time use survey data, and see Docs for full format:
  # time_use_filepath: Scenarios/Luxembourg/time_use_sample.csv
  time_use_filepath: Scenarios/Luxembourg/TUS.csv
  # Region
  region: Luxembourg
  # Special weekly routine used for all agents not belonging to the region
  border_worker_routine: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
  # TUS data are read at a ten-minute interval.
  #
  # This parameter should be set to the simulation tick duration in seconds, so that the TUS
  # data can be resampled to match the simulation resolution
  tick_length_s: 600
  # Length of each age bracket, in years, when dividing the TUS data into chunks
  age_bracket_length: 10
  # Used to determine which agents ever perform the activity work
  work_activity_type: Work
  school_activity_type: School
  # Which activities are coded in the dataset.
  # Codes in the primary column are less specific, but used first.
  # codes in the secondary column are used if certain codes are in the primary column.
  #
  # Format is
  #   Activity Label:
  #     primary: [code, code,...]
  #     secondary: [code, code,...]
  #
  activity_code_map:
    House:
      primary: [1]
      secondary: [11,12,13,14,21,22,23,31,34,35,39,115,121,213,214,221,222,231,239,311,314,315,324,
                  325,326,327,328,329,333,346,347,349,351,353,354,356,363,364,371,381,382,383,384,
                  386,391,393,419,421,422,431,432,433,434,511,512,522,551,711,713,714,719,733,734,
                  737,739,744,745,746,747,749,811,812,813,819,821,829,839]
    Work:
      primary: [2]
      secondary: [111]
    School:
      primary: [3]
      secondary: [232,233]
    Restaurant:
      primary: [5]
      secondary: [546,547]
    Outdoor:
      primary: [6,9,10,11,12,14]
      secondary: [343,345,411,412,413,415,424,439,525,539,541,542,543,545,548,549,612,613,614,617,
                  618,619,629]
    Car:
      primary: [13]
    Public Transport:
      primary: [15,16,17,18,19]
    Shop:
      secondary: [361,362,366,367,368,369,425]
    Medical:
      secondary: [365]
    Place of Worship:
      secondary: [435]
    Indoor Sport:
      secondary: [544,615,616]
    Cinema or Theatre:
      secondary: [531,532,533]
    Museum or Zoo:
      secondary: [534]
    Visit:
      primary: [4]
      secondary: [395,426,429,515,521,523,524]

# ######################################### Movement ###############################################

movement_model:
  __type__: simple_movement_model.SimpleMovementModel
  __prng_seed__: 10
  # Agents in the following health states do not move location
  no_move_health_states: [HOSPITALIZING, VENTILATING, DEAD]
  # Moving onto public transport is a special case
  pt_activity_type: Public Transport
  pt_location_type: Public Transport

# ######################################### Housing ################################################

# Configures the housing model used during simulation
housing_model:
  __type__: simple_housing_model.SimpleHousingModel
  __prng_seed__: 10
  # Region
  region: Luxembourg
  # Border regions and their coordinates, in [lat, lon] (WGS84) format, these being the home
  # locations of border workers
  other_regions:
    Belgium: [49.683729, 5.814469]
    France: [49.357664, 6.166023]
    Germany: [49.756279, 6.643219]
  # Age below which an agent is considered a child
  child_age_limit: 15
  # Age at or above which an agent is considered retired
  retired_age_limit: 65
  number_of_carehomes: 52
  house_location_type: House
  carehome_location_type: Care Home
  home_activity_type: House
  residents_per_carehome: 38
  # Distribution of numbers of children and numbers of retired, given house size. The numbers below
  # are derived from 2001 Luxembourg census data:
  #
  # https://statistiques.public.lu/en/population-employment/index.html
  #
  # Note that categories '5' and '7' were '5+' and '7+' in the 2001 census data. Note also that
  # 'children' in the 2001 census data referred to ages 0-14, as opposed to 0-17. The format is:
  #
  #                                 Househould size
  #                   0      1      2      3      4     5     6    7
  #            0 [    x,     x,     x,     x,     x,    x,    x,   x]
  #  Number    1 [    x,     x,     x,     x,     x,    x,    x,   x]
  #    of      2 [    x,     x,     x,     x,     x,    x,    x,   x]
  #   Type     3 [    x,     x,     x,     x,     x,    x,    x,   x]
  #            4 [    x,     x,     x,     x,     x,    x,    x,   x]
  #            5 [    x,     x,     x,     x,     x,    x,    x,   x]
  #            6 [    x,     x,     x,     x,     x,    x,    x,   x]
  #            7 [    x,     x,     x,     x,     x,    x,    x,   x]
  #
  # Household distribution of children:
  household_distribution_children:
    - [    0, 50384, 46191, 15885,  9035, 2514,  784, 276]
    - [    0,     0,  2382, 12257,  4972, 2041,  514, 149]
    - [    0,     0,     0,  1108, 14021, 2180,  720, 205]
    - [    0,     0,     0,     0,   253, 4165,  622, 219]
    - [    0,     0,     0,     0,     0,   38,  737, 150]
    - [    0,     0,     0,     0,     0,    0,    5, 146]
    - [    0,     0,     0,     0,     0,    0,    0,   0]
    - [    0,     0,     0,     0,     0,    0,    0,   0]
  # Household distribution of retired:
  household_distribution_retired:
    - [    0, 33586, 30677, 25001, 26510, 9743, 2706, 821]
    - [    0, 16798,  6893,  2388,  1240,  971,  445, 191]
    - [    0,     0, 11003,  1656,   483,  207,  214, 112]
    - [    0,     0,     0,   206,    36,   11,   12,  19]
    - [    0,     0,     0,     0,    12,    4,    3,   0]
    - [    0,     0,     0,     0,     0,    1,    2,   2]
    - [    0,     0,     0,     0,     0,    0,    0,   0]
    - [    0,     0,     0,     0,     0,    0,    0,   0]

# ######################################### Education ##############################################

# Configures the education model used during simulation
education_model:
  __type__: simple_education_model.SimpleEducationModel
  __prng_seed__: 10
  # The school activity type
  school_activity_type: School
  # The home activity type
  home_activity_type: House
  # The house location type
  house_location_type: House
  # The different types of school
  school_location_types:
    - Primary School
    - Secondary School
  # The number of schools of each type
  number_of_schools:
    Primary School: 181
    Secondary School: 58
  # The minimum age of attendence for each type of school
  min_age:
    Primary School: 4
    Secondary School: 11
  # How many years children stay in school for each type of school
  years_per_school:
    Primary School: 7
    Secondary School: 7
  # How many classrooms there are in each year group for each type of school
  classrooms_per_year:
    Primary School: 2
    Secondary School: 5
  # How many students are in each classroom for each type of school
  students_per_classroom:
    Primary School: 20
    Secondary School: 30
  # How classrooms belonging to each type of school are referred to
  classroom_type:
    Primary School: Primary School Classroom
    Secondary School: Secondary School Classroom

# ######################################### Transport ##############################################

# Configures the transport model used during simulation, including public transport (pt) and cars
transport_model:
  __type__: simple_transport_model.SimpleTransportModel
  __prng_seed__: 10
  car_activity_type: Car
  car_location_type: Car
  pt_activity_type: Public Transport
  pt_location_type: Public Transport
  number_of_pt_locations: 1468
  number_can_visit_pt: 10
  # Units of public transport avaiable at each 10 minute interval of the day
  units_available_week_day: [235, 216, 154, 98, 46, 25, 14, 3, 3, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 17, 30, 44, 110, 178, 259, 342, 408, 467, 574, 608, 667, 750, 796, 909, 1004, 1080, 1206, 1359, 1410, 1458, 1468, 1334, 1186, 1086, 1094, 1053, 1082, 1055, 980, 913, 911, 904, 926, 906, 878, 863, 873, 830, 868, 845, 858, 828, 841, 850, 858, 855, 879, 911, 951, 966, 940, 935, 955, 934, 986, 955, 937, 918, 940, 957, 1024, 1074, 1063, 1053, 1081, 1013, 1060, 995, 975, 962, 984, 983, 1073, 1065, 1103, 1136, 1146, 1113, 1148, 1184, 1180, 1136, 1170, 1118, 1098, 1107, 1069, 1067, 1095, 1024, 995, 954, 906, 861, 829, 754, 726, 675, 635, 651, 606, 585, 633, 583, 575, 545, 518, 521, 556, 512, 500, 472, 437, 412, 433, 377, 359, 335, 297]
  units_available_weekend_day: [214, 200, 159, 104, 55, 34, 22, 28, 27, 37, 37, 38, 38, 38, 28, 31, 27, 28, 28, 36, 32, 37, 37, 28, 29, 29, 26, 52, 73, 129, 163, 197, 227, 276, 306, 352, 397, 425, 443, 457, 435, 480, 504, 508, 487, 486, 475, 488, 521, 574, 554, 552, 549, 553, 539, 558, 531, 514, 513, 520, 527, 559, 519, 527, 506, 506, 496, 522, 542, 544, 539, 538, 522, 550, 565, 567, 576, 565, 564, 598, 586, 580, 564, 594, 588, 624, 623, 618, 600, 609, 602, 649, 601, 583, 563, 535, 530, 582, 582, 599, 596, 570, 568, 600, 605, 586, 549, 556, 557, 567, 560, 582, 582, 586, 551, 557, 547, 539, 534, 534, 519, 499, 488, 452, 461, 431, 434, 443, 423, 422, 396, 390, 378, 362, 358, 375, 362, 344, 333, 333, 314, 295, 290, 263]
  house_location_type: House
  carehome_location_type: Care Home
  other_region_location_types: [Belgium, France, Germany]
  # Distances along a real world transportation network typically differ from the spherical
  # distance. Over short distances, the spherical distance is approximately equal to the Euclidean
  # distance. The ratio of the network distance and the Euclidean distance is called the 'network
  # detour ratio'. The network distance is often around 1.25–1.41 times the Euclidean distance. The
  # article
  #
  # Hai Yanga, Jintao Kea and Jieping Ye, 'A universal distribution law of network detour ratios',
  # Transportation Research Part C, 2018.
  #
  # suggests that network distance follows a distribution of the form
  #
  # network_distance = euclidean_distance*alpha + beta
  #
  # for two parameters alpha and beta, which the authors determine as follows:
  alpha: 1.2988
  beta:  0.3838

# ######################################### Health #################################################

# Configures the health model used during simulation
health_model:
  __type__: simple_health_model.SimpleHealthModel
  __prng_seed__: 10
  number_of_medical_clinics: 125
  number_of_hospitals: 11
  number_of_cemeteries: 1
  medical_clinic_location_type: Medical
  medical_activity_type: Medical
  hosptial_location_type: Hospital
  house_location_type: House
  cemetery_location_type: Cemetery
  carehome_location_type: Care Home
  other_region_location_types: [Belgium, France, Germany]

# ######################################### Leisure ################################################

# Configures the leisure model used during simulation, taking care of activities not covered by
# the above components
leisure_model:
  __type__: simple_leisure_model.SimpleLeisureModel
  __prng_seed__: 10
  # Types of leisure location and how many should exist in a full size simulation
  numbers_of_leisure_locations:
    Restaurant:        2247
    Outdoor:           1
    Shop:              3136
    Place of Worship:  677
    Indoor Sport:      199
    Cinema or Theatre: 34
    Museum or Zoo:     77
  # The mapping from activities to lists of accessible location types
  leisure_activity_mapping:
    Restaurant:        [Restaurant]
    Outdoor:           [Outdoor]
    Shop:              [Shop]
    Place of Worship:  [Place of Worship]
    Indoor Sport:      [Indoor Sport]
    Cinema or Theatre: [Cinema or Theatre]
    Museum or Zoo:     [Museum or Zoo]
    Visit:             [House, Care Home]
  # Which activies are assigned locations using a simple random sample, and how many such locations
  # can be visited by each agent:
  activities_by_random:
    Outdoor:           1
    Cinema or Theatre: 10
    Museum or Zoo:     10
  # Which activies are assigned locations using a KDTree, with only one such location is assigned to
  # each agent:
  activities_by_proximity:
    Place of Worship:  1
    Indoor Sport:      1
  # Which activies are assigned locations using a distance distribution, and how many such locations
  # can be visited by each agent:
  activities_by_distance:
    Visit:             10
    Restaurant:        10
    Shop:              10
  # For locations assigned by distance, additional configuration is required. The mobility data used
  # to construct location choice functions:
  location_choice_fp: Scenarios/Luxembourg/Luxmobil.csv
  # How the activities are referred to in the data and the origin and destination countries:
  data_activity_dict:
    Visit: Visite
    Restaurant: Repas
    Shop: Achats
  origin_country: Luxembourg
  destination_country: Luxembourg
  # For each of the activities to be assigned by distance, a probability distribution is built on
  # the length of trips found in the data. This discrete probability distribution takes the form of
  # a histogram. The parameters below determine the width of bins used in the corresponding
  # histograms and the total number of bins. Distances greater than the total range of a histogram,
  # that is, the number of bins multiplied by the bin width, will be assigned probability zero. The
  # units here are kilometers. When using such a distribution, the location sample size determines
  # how many locations are included in a random sample to which the distribution is applied. Note
  # that a large location sample size will result in performance issues:
  number_of_bins: 10
  bin_width: 10
  location_sample_size: 100
  # House and care home location types, needed to identify houses and care homes
  house_location_type: House
  carehome_location_type: Care Home
  other_region_location_types: [Belgium, France, Germany]

# ######################################### Labour #################################################

# Configures the labour model used during simulation
labour_model:
  __type__: simple_labour_model.SimpleLabourModel
  __prng_seed__: 10
  work_activity_type: Work
  home_activity_type: House
  # Additional types of location at which agents can work together with the numbers of such
  # locations appearing in a full size model:
  additional_work_location_types:
    Agriculture:                86
    Extraction:                 11
    Manufacturing:              785
    Energy:                     98
    Water:                      71
    Construction:               4366
    Trade:                      4684
    Transport:                  1349
    Catering and Accommodation: 464
    ICT:                        2752
    Finance:                    1241
    Real Estate:                1458
    Technical:                  8349
    Administration:             2433
    Education:                  838
    Entertainment:              87
    Other Services:             1523
  # These are the locations types at which agent possibly work, together an object configuring the
  # distribution of number of positions. If the object is an integer, then the distribution is
  # constant. If the object is a list, then the entries in the list provide weights for the
  # intervals appearing in workforce_profile_distribution_format, thereby creating discrete
  # probability distributions for numbers of positions at each place of work.
  workforce_profile_distribution:
    Care Home:                        70
    Primary School Classroom:         2
    Secondary School Classroom:       3
    Public Transport:                 1
    Place of Worship:                 1
    Agriculture:                      [76,   8,    1,   1,    0]
    Extraction:                       [3,    4,    2,   2,    0]
    Manufacturing:                    [369,  201,  101, 88,  26]
    Energy:                           [78,   11,   3,   5,    1]
    Water:                            [29,   21,   13,  7,    1]
    Construction:                     [2786, 1040, 360, 155, 25]
    Trade:                            [3570, 621,  159, 83,   7]
    Transport:                        [818,  299,  120, 99,  13]
    Catering and Accommodation:       [1728, 829,  118, 30,   6]
    ICT:                              [2313, 302,  98,  64,   9]
    Finance:                          [862,  222,  57,  68,  32]
    Real Estate:                      [1353, 92,   11,  2,    0]
    Technical:                        [7315, 795,  153, 69,  17]
    Administration:                   [1958, 298,  85,  67,  25]
    Education:                        [789,  41,   6,   2,    0]
    Entertainment:                    [295,  47,   16,  5,    0]
    Other Services:                   [1290, 211,  15,  7,    0]
    Restaurant:                       [1728, 829,  118, 30,   6]
    Shop:                             [2519, 691,  107, 53,  10]
    Medical:                          [13,   2,    1,   11,   0]
    Hospital:                         [0,    0,    0,   0,    8]
    Indoor Sport:                     [295,  47,   16,  5,    0]
    Cinema or Theatre:                [2313, 302,  98,  64,   9]
    Museum or Zoo:                    [295,  47,   16,  5,    0]
  # The format was originally [0-4, 5-19, 20-49, 50-249, 250+]. The maximum weight is now given:
  workforce_profile_distribution_format: [[1,5], [5,20], [20,50], [50,250], [250,500]]
  # For locations assigned by distance, such as working loctions, additional configuration is
  # required. The mobility data used to construct location choice functions:
  location_choice_fp: Scenarios/Luxembourg/Luxmobil.csv
  # How the activities are referred to in the data and the origin and destination countries:
  data_activity_dict:
    Work: Travail
  origin_country_dict:
    Luxembourg: Luxembourg
    Belgium: Belgique
    France: France
    Germany: Allemagne
  destination_country: Luxembourg
  # For each of the activities to be assigned by distance, a probability distribution is built on
  # the length of trips found in the data. This discrete probability distribution takes the form of
  # a histogram. The parameters below determine the width of bins used in the corresponding
  # histograms and the total number of bins. Distances greater than the total range of a histogram,
  # that is, the number of bins multiplied by the bin width, will be assigned probability zero. The
  # units here are kilometers. When using such a distribution, the location sample size determines
  # how many locations are included in a random sample to which the distribution is applied. Note
  # that a large location sample size will result in performance issues:
  number_of_bins:
    Luxembourg: 10
    Belgium:    20
    France:     20
    Germany:    20
  bin_width:
    Luxembourg: 10
    Belgium:    10
    France:     10
    Germany:    10
  location_sample_size: 100
  # House and care home location types, needed to identify houses and care homes
  house_location_type: House
  carehome_location_type: Care Home
  other_region_location_types: [Belgium, France, Germany]

# #########################################  Disease ###############################################

disease_model:
  __type__: multi_strain_disease_model.MultiStrainDiseaseModel
  __prng_seed__: 10
  # Locations in which no or reduced transmission occurs:
  no_transmission_locations: [OW Construction, Outdoor, Belgium, France, Germany, Cemetery]
  reduced_transmission_locations: [Medical, Hospital]
  reduced_transmission_factor: 0.09
  # Resident nationality:
  region: Luxembourg
  # All health states:
  health_states: [SUSCEPTIBLE, EXPOSED, ASYMPTOMATIC, PREINFECTED, INFECTED, HOSPITALIZING, VENTILATING, RECOVERED, DEAD]
  # The fundamental health states:
  susceptible_state: SUSCEPTIBLE
  infected_states: [EXPOSED, ASYMPTOMATIC, PREINFECTED, INFECTED, HOSPITALIZING, VENTILATING]
  dead_state: DEAD
  # The strains:
  strains:
    Alpha:
      # Number of initial cases of this strain among the resident population:
      num_initial_cases: 320
      # Basic transmission probability for this strain, per tick:
      transmission_probability:
        EXPOSED:       0.0000000
        ASYMPTOMATIC:  0.0001925
        PREINFECTED:   0.0001925
        INFECTED:      0.0003500
        HOSPITALIZING: 0.0003500
        VENTILATING:   0.0003500
      # A list of possibile pathways for this strains:
      disease_profile_list: [SEAR, SEPIR, SEPID, SEPIHR, SEPIHD, SEPIHVHR, SEPIHVD]
      # Age dependent distribution of the pathways:
      disease_profile_distribution_by_age:
        0:  [0.826,0.161829614,0,0.006085193,0,0.006085193,0]
        5:  [0.826,0.167373901,0,0.006626099,0,0,0]
        10: [0.874,0.126,0,0,0,0,0]
        15: [0.874,0.123474626,0,0.001262687,0,0.001262687,0]
        20: [0.838,0.153501713,0,0.008498287,0,0,0]
        25: [0.838,0.157877069,0,0.004122931,0,0,0]
        30: [0.802,0.186385752,0,0.010784659,0,0.000829589,0]
        35: [0.802,0.185644466,0,0.011405108,0,0.000950426,0]
        40: [0.76,0.213013444,0,0.020509782,0,0.006476773,0]
        45: [0.76,0.207210413,0,0.027168515,0,0.005621072,0]
        50: [0.706,0.25524523,0,0.034195385,0,0.004559384,0]
        55: [0.706,0.222626632,0,0.065775457,0,0.005597911,0]
        60: [0.622,0.270040285,0,0.086367772,0,0.017993286,0.003598657]
        65: [0.622,0.225343587,0.008251698,0.111397923,0,0.018861024,0.014145768]
        70: [0.586,0.109950189,0,0.219643826,0.018826614,0.032789686,0.032789686]
        75: [0.586,0.072096598,0.025642755,0.234401083,0.030574054,0.051285511,0]
        80: [0.586,0.00409581,0.070944956,0.213491765,0.093936377,0.010510364,0.021020728]
        85: [0.586,0.048304351,0.087766956,0.172892776,0.097722004,0,0.007313913]
        90: [0.586,0.036140995,0.131093941,0.138805349,0.107959715,0,0]
      # The step size used above
      step_size: 5
      # The durations of time spent in each state for each pathway, in days:
      durations_by_profile:
        SEAR:     [None,[G,[4,0.75]],[G,[4,1.25]] ,None]
        SEPIR:    [None,[G,[4,0.75]],[G,[4,0.525]],[G,[4,0.725]],None]
        SEPID:    [None,[G,[4,0.75]],[G,[4,0.525]],[U,[10,15]]  ,None]
        SEPIHR:   [None,[G,[4,0.75]],[G,[4,0.525]],[U,[5,9]]    ,[U,[8,21]],None]
        SEPIHD:   [None,[G,[4,0.75]],[G,[4,0.525]],[U,[5,9]]    ,[U,[5,16]],None]
        SEPIHVHR: [None,[G,[4,0.75]],[G,[4,0.525]],[U,[5,9]]    ,[U,[3,5]] ,[U,[2,12]],[U,[2,4]],None]
        SEPIHVD:  [None,[G,[4,0.75]],[G,[4,0.525]],[U,[5,9]]    ,[U,[3,5]] ,[U,[7,10]],None]
    Beta:
     # Number of initial cases of this strain among the resident population:
      num_initial_cases: 320
      # Basic transmission probability for this strain, per tick:
      transmission_probability:
        EXPOSED:       0.0000000
        ASYMPTOMATIC:  0.0001925
        PREINFECTED:   0.0001925
        INFECTED:      0.0003500
        HOSPITALIZING: 0.0003500
        VENTILATING:   0.0003500
      # A list of possibile pathways for this strains:
      disease_profile_list: [SEAR, SEPIR, SEPID, SEPIHR, SEPIHD, SEPIHVHR, SEPIHVD]
      # Age dependent distribution of the pathways:
      disease_profile_distribution_by_age:
        0:  [0.826,0.161829614,0,0.006085193,0,0.006085193,0]
        5:  [0.826,0.167373901,0,0.006626099,0,0,0]
        10: [0.874,0.126,0,0,0,0,0]
        15: [0.874,0.123474626,0,0.001262687,0,0.001262687,0]
        20: [0.838,0.153501713,0,0.008498287,0,0,0]
        25: [0.838,0.157877069,0,0.004122931,0,0,0]
        30: [0.802,0.186385752,0,0.010784659,0,0.000829589,0]
        35: [0.802,0.185644466,0,0.011405108,0,0.000950426,0]
        40: [0.76,0.213013444,0,0.020509782,0,0.006476773,0]
        45: [0.76,0.207210413,0,0.027168515,0,0.005621072,0]
        50: [0.706,0.25524523,0,0.034195385,0,0.004559384,0]
        55: [0.706,0.222626632,0,0.065775457,0,0.005597911,0]
        60: [0.622,0.270040285,0,0.086367772,0,0.017993286,0.003598657]
        65: [0.622,0.225343587,0.008251698,0.111397923,0,0.018861024,0.014145768]
        70: [0.586,0.109950189,0,0.219643826,0.018826614,0.032789686,0.032789686]
        75: [0.586,0.072096598,0.025642755,0.234401083,0.030574054,0.051285511,0]
        80: [0.586,0.00409581,0.070944956,0.213491765,0.093936377,0.010510364,0.021020728]
        85: [0.586,0.048304351,0.087766956,0.172892776,0.097722004,0,0.007313913]
        90: [0.586,0.036140995,0.131093941,0.138805349,0.107959715,0,0]
      # The step size used above
      step_size: 5
      # The durations of time spent in each state for each pathway, in days:
      durations_by_profile:
        SEAR:     [None,[G,[4,0.75]],[G,[4,1.25]] ,None]
        SEPIR:    [None,[G,[4,0.75]],[G,[4,0.525]],[G,[4,0.725]],None]
        SEPID:    [None,[G,[4,0.75]],[G,[4,0.525]],[U,[10,15]]  ,None]
        SEPIHR:   [None,[G,[4,0.75]],[G,[4,0.525]],[U,[5,9]]    ,[U,[8,21]],None]
        SEPIHD:   [None,[G,[4,0.75]],[G,[4,0.525]],[U,[5,9]]    ,[U,[5,16]],None]
        SEPIHVHR: [None,[G,[4,0.75]],[G,[4,0.525]],[U,[5,9]]    ,[U,[3,5]] ,[U,[2,12]],[U,[2,4]],None]
        SEPIHVD:  [None,[G,[4,0.75]],[G,[4,0.525]],[U,[5,9]]    ,[U,[3,5]] ,[U,[7,10]],None]
  # Mutation matrix
  mutation_matrix:
    Alpha: {Alpha: 1.0, Beta: 0.0}
    Beta:  {Alpha: 0.0, Beta: 1.0}
  # Immunity matrix
  immunity_matrix:
    Alpha: {Alpha: 1.0, Beta: 1.0}
    Beta:  {Alpha: 1.0, Beta: 1.0}

# ######################################### Interventions ##########################################
# Interventions list
#
# Each intervention has a unique ID, a type, and a configuration block.
# These interventions occur in-order in the simulation.  This is important because some,
# such as quarantine, may interrupt actions other are interested in.
interventions:

  # Moves agents to locations when they are in certain health states
  basic_hospitalisation:
    # This special key defines the class to use.
    __type__: hospitalisation.Hospitalisation
    __prng_seed__: 10
    # Starting state of the intervention
    __enabled__: true
    # This special key defines when to disable/enable the intervention
    __schedule__:
    # Things below this line are passed to the intervention as config

    # Agents in the following states will be moved to a hospital:
    hospital_states: [HOSPITALIZING, VENTILATING]
    # Agents in the following states will be moved to a cemetery:
    dead_states: [DEAD]
    # How to find locations to move agents to
    cemetery_location_type: Cemetery
    hospital_location_type: Hospital

  # # The intervention refers to a system that distributes
  # # invitations to test, across the population, according to a certain algorithm.
  # large_scale_testing:
  #   __type__: testing.LargeScaleTesting
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     17th May 2020: enable
  #     18th May 2020: {"invitations_per_day": 1937}
  #     19th May 2020: {"invitations_per_day": 0}
  #     25th May 2020: {"invitations_per_day": 58381}
  #     26th May 2020: {"invitations_per_day": 0}
  #     2nd June 2020: {"invitations_per_day": 47487}
  #     3rd June 2020: {"invitations_per_day": 0}
  #     8th June 2020: {"invitations_per_day": 153909}
  #     9th June 2020: {"invitations_per_day": 0}
  #     15th June 2020: {"invitations_per_day": 158136}
  #     16th June 2020: {"invitations_per_day": 0}
  #   # The number of agents selected uniformly at random for testing each day:
  #   invitations_per_day: 0
  #   # The distribution of time between an invitation to test being received
  #   # and the agent booking a test:
  #   invitation_to_test_booking_days:
  #     {1: 95, 2: 95, 3: 235, 4: 235, 5: 157, 6: 157, 7: 277, 8: 277, 9: 251, 10: 251, 11: 187, 12: 187, 13: 133, 14: 133, 15: 117, 16: 117, 17: 96, 18: 96, 19: 48, 20: 48, 21: 71, 22: 71, 23: 54, 24: 54, 25: 37, 26: 37, 27: 34, 28: 34, 29: 48, 30: 48, 31: 37, 32: 37, 33: 28, 34: 28, 35: 38, 36: 38, 37: 36, 38: 36, 39: 30, 40: 30, 41: 22, 42: 22, 43: 28, 44: 28, 45: 30, 46: 30, 47: 13, 48: 13, 49: 24, 50: 24, 51: 23, 52: 23, 53: 16, 54: 16, 55: 12, 56: 12, 57: 16, 58: 16, 59: 13, 60: 13, 61: 5, 62: 5, 63: 12, 64: 12, 65: 9, 66: 9, 67: 8, 68: 8, 69: 2, 70: 2, 71: 6, 72: 6, 73: 6, 74: 6, 75: 3, 76: 3, 77: 4, 78: 4, 79: 3, 80: 3, 81: 3, 82: 3, 83: 2, 84: 2, 85: 3, 86: 3, 87: 3, 88: 3, 89: 1, 90: 1, 91: 2, 92: 2, 93: 5, 94: 5, 95: 5, 96: 5, 97: 2, 98: 2}

  # # The intervention 'symptomatic_quarantine' has agents moving into sympomatic health states
  # # quarantine automatically enter quarantine for a ceratin duration
  # symptomatic_quarantine:
  #   __type__: symptomatic_quarantine.SymptomaticQuarantine
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     15th March 2020: enable
  #     15th April 2020: disable
  #   # The probabilities that agents enter quarantine having moving into new health states
  #   prob_quarantine_symptomatic: 1.0
  #   prob_quarantine_asymptomatic: 0.5
  #   # Agents in the following states are symptomatic and asymptomatic
  #   symptomatic_states: [INFECTED, HOSPITALIZING, VENTILATING]
  #   asymptomatic_states: [ASYMPTOMATIC, PREINFECTED]
  #   # Duration of quarantine
  #   default_duration_days: 14
  #   # If an agent is present in one of the following locations, they are exempt from quarantining
  #   # under all circumstances:
  #   location_blacklist: [Hospital, Cemetery]
  #   # Unless an agent is in an exempt location, they are directed to the location at which they
  #   # perform the activity 'House':
  #   home_activity_type: Outdoor

  # # The intervention 'prescription_testing' refers to situations where an agent books a test without having
  # # been directed to do so by any of the other interventions. Chief among these are the situations in
  # # which an agent voluntarily books a test having developed symptoms.
  # prescription_testing:
  #   __type__: testing.PrescriptionTesting
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     15th March 2020: enable
  #   # The probability that an agent books a test at the moment they develop symptoms. This corresponds
  #   # to the real-world scenario in which an agent develops symptoms and goes to see a doctor, who
  #   # recommends the agent to get tested. We assume there is a small chance asymptomatics book such
  #   # a test.
  #   prob_test_symptoms_symptomatic: 1.0
  #   prob_test_symptoms_asymptomatic: 0.0
  #   # Time between onset of symptoms and booking of a test:
  #   onset_of_symptoms_to_test_booking_days: 1
  #   # Agents in the following states are symptomatic:
  #   symptomatic_states: [INFECTED, HOSPITALIZING, VENTILATING]
  #   asymptomatic_states: [ASYMPTOMATIC, PREINFECTED]

  # # The intervention 'test_booking' simply refer to the system that books tests for agents, should
  # # they request a booking.
  # test_booking:
  #   __type__: laboratory.TestBooking
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     15th March 2020: enable
  #   # The time taken between the booking of a test and the time at which the test takes place, in the
  #   # case where the agent is not showing symptoms at the time of booking:
  #   test_booking_to_test_sample_days_no_symptoms: 4
  #   # The time taken between the booking of a test and the time at which the test takes place, in the
  #   # case where the agent is showing symptoms at the time of booking:
  #   test_booking_to_test_sample_days_symptoms: 2
  #   # Agents in the following states are symptomatic:
  #   symptomatic_states: [INFECTED, HOSPITALIZING, VENTILATING]

  # # The intervention 'test_lab' refers to lab testing. If an agent is tested and if the agent is
  # # is either incubating or contagious with the virus, then the test returns a positive result, except
  # # in the case of a false postive, while if the agent is not either incubating or contagious with the
  # # virus, then the test returns a negative results, except in the case of a false negative.
  # test_lab:
  #   __type__: laboratory.Laboratory
  #   __prng_seed__: 10
  #   __enabled__: true
  #   __schedule__:
  #     27 February 2020: {max_tests_per_day: 1000}
  #     16 March 2020: {max_tests_per_day: 1500}
  #   # Maximum number of tests performed each day, with additional tests booked being cancelled:
  #   max_tests_per_day: 1
  #   # The probability of a false positive:
  #   prob_false_positive: 0.0
  #   # The probability of a false negative:
  #   prob_false_negative: 0.01
  #   # The time taken between a test and publishing of the result of that test:
  #   do_test_to_test_results_days: 2
  #   # Home activity type, used in reporting to keep track of where tested agents live
  #   home_activity_type: House
  #   # Non-resident home types:
  #   border_countries: [Belgium, France, Germany]
  #   # Agents in the following states are categorized as exposed:
  #   incubating_states: [EXPOSED]
  #   # Agents in the following states can transmit the virus:
  #   contagious_states: [ASYMPTOMATIC, PREINFECTED, INFECTED, HOSPITALIZING, VENTILATING]

  # # The intervention 'contact_tracing_app' refers to contact tracing perform not manually, but via an
  # # application installed on the phones of agents. A certain proportion of the population is assumed
  # # to possess the app from the very beginning. The app works according to the Corona-Warn-App, which
  # # is the official COVID-19 exposure notification app developed for Germany. The window of time over
  # # which contacts are considered is specified.
  # contact_tracing_app:
  #   __type__: contact_tracing.ContactTracingApp
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     3rd March 2020: enable
  #   # Proportion of population who have the app:
  #   app_prevalence: 0.2
  #   # The window of time over which contacts are considered:
  #   tracing_time_window_days: 14
  #   # Contacts are assumed to occur when two agents are in the same location at the same time. So long
  #   # as the tick length is at least 600 seconds, this assumption implies the following vaules for the
  #   # app parameters, full details of which are described in the documentation of the Corona-Warn-App:
  #   duration_wgt: 1
  #   attenuation_wgt: 1
  #   days_since_last_expsr_wgt: 5
  #   # The risk level is calculated according to the base case specified by the Corona-Warn-App, the
  #   # units of the indices being days and the length of which should be equal to the window length:
  #   trans_risk_level_base_case: [5, 6, 8, 8, 8, 5, 3, 1, 1, 1, 1, 1, 1, 1]
  #   # Threshold parameters as specified by the Corona-Warn-App:
  #   trans_risk_threshold: 11
  #   time_at_risk_threshold_mins: 15
  #   # Average risk used in calculating total time at risk, as specified by the Corona-Warn-App:
  #   av_risk_mins: 25
  #   # Agents follow the advice to quarantine and immediately book a test with the following
  #   # probability:
  #   prob_do_recommendation: 1.0
  #   # Locations except from the contact tracing proceedure are as follows:
  #   location_blacklist: [Outdoor, Cemetery, Belgium, France, Germany]

  # # The intervention 'contact_tracing_manual' refers to the manual tracing of contacts of agents with postive
  # # test results. The maximum number of positive agents whose contacts can be traced is specified, as
  # # is the window of time over which such contacts are registered. Contacts are considered to be
  # # agents who performed one of the specified regular activities in the same location as the agent, so
  # # long as the agent was also performing one such activity. For example, if the agent was working in
  # # a given location and another agent was also working there, at the same time, then the agent would
  # # remember the contact with the other agent. Conversely, if the location was, for example, a shop
  # # with the other agent only shopping there, then the first agent would not remember this. Other
  # # agents traced though this proceedure are instructed to get tested and quarantine in the meantime.
  # # With a certain probability, agents do not follow this advice and continue as normal.
  # contact_tracing_manual:
  #   __type__: contact_tracing.ContactTracingManual
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     20th April 2020: enable
  #     1st July 2020: {max_per_day: 200}
  #     1st August 2020: {max_per_day: 350}
  #     1st September 2020: {max_per_day: 500}
  #     1st November 2020: {max_per_day: 600}
  #   # The maximum number of positive agents whose contacts can be tested each day:
  #   max_per_day: 100
  #   # The window of time over which contacts are considered:
  #   tracing_time_window_days: 2
  #   # The activities considered relevant for the purposes of contact tracing:
  #   relevant_activities: [House, Work, School, Visit]
  #   # Agents follow the advice to quarantine and immediately book a test with the following
  #   # probability:
  #   prob_do_recommendation: 1.0
  #   # Locations except from the contact tracing proceedure are as follows:
  #   location_type_blacklist: [Cemetery, Outdoor, Belgium, France, Germany]

  # # The intervention 'contact_tracing_manual_fast' refers to a simplified implementation of manual
  # # contact tracing.
  # contact_tracing_manual_fast:
  #   __type__: contact_tracing.ContactTracingManualFast
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     20th April 2020: enable
  #     1st July 2020: {max_per_day: 200}
  #     1st August 2020: {max_per_day: 350}
  #     1st September 2020: {max_per_day: 500}
  #     1st November 2020: {max_per_day: 600}
  #   # The maximum number of positive agents whose contacts can be tested each day:
  #   max_per_day: 100
  #   # The activities considered relevant for the purposes of contact tracing:
  #   home_activity: House
  #   school_activity: School
  #   work_activity: Work
  #   # Age brackets:
  #   min_school: 4
  #   min_work: 18
  #   max_work: 65
  #   # Locations except from the contact tracing proceedure are as follows:
  #   location_type_blacklist: [Belgium, France, Germany]

  # # The intervention 'quarantine' directs agents to return home, under certain conditions. The list of
  # # possible conditions includes that the agent has tested positive, the agent has been recommended to
  # # quarantine after contact tracing (either manually or via the app) and that the agent is trying to
  # # access a prohibited location (for example, a border worker during a period of border closure). The
  # # intervention 'quarantine' is the tool that enforces and lifts such quarantines. Requests for
  # # quarantines are made by other interventions.
  # quarantine_at_home:
  #   __type__: quarantine.Quarantine
  #   __prng_seed__: 10
  #   __enabled__: true
  #   __schedule__:
  #     23rd September 2020: {default_duration_days: 10}
  #   # If this is true, disabling quarantine immediately allows people to change
  #   # else it simply disables putting new people into quarantine, and they still have to
  #   # wait out their allotted time.
  #   disable_releases_immediately: false
  #   # Quarantining directs an agent home for a default duration:
  #   default_duration_days: 14
  #   # In the case that a quarantine has been imposed on an agent on an individual basis, and if that
  #   # agent tests negative during such a quarantine, then the quarantine of that agent will end after
  #   # the following number of days:
  #   negative_test_result_to_end_quarantine_days: 2
  #   # If an agent is present in one of the following locations, then they are exempt from quarantining
  #   # under all circumstances:
  #   location_blacklist: [Hospital, Cemetery]
  #   # Unless an agent is in an exempt location, they are directed to the location at which they
  #   # perform the activity 'House':
  #   home_activity_type: House
  #   # home_activity_type: Outdoor

  # work_from_home:
  #   __type__: work_from_home.WorkFromHome
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     23th June 2020: enable
  #     24th June 2020: {prob_work_from_home: 0.37}
  #     1st July 2020: {prob_work_from_home: 0.28}
  #     1st October 2020: {prob_work_from_home: 0.24} # Q1 data
  #   # Probability to work from home:
  #   prob_work_from_home: 0.0
  #   # Location types exempt from working at home restrictions:
  #   locations:
  #     - Manufacturing
  #     - Trade
  #     - Transport
  #     - Energy
  #     - Water
  #     - Extraction
  #     - Real Estate
  #   # If an agent requests to move to the location at which they perform the activity 'Work', they
  #   # are directed to the location at which they perform the activity 'House':
  #   home_activity_type: House
  #   work_activity_type: Work

  # # The interventions 'curfew' directs people to stay home between certain times.
  # curfew:
  #   __type__: curfew.Curfew
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     26th October 2020: enable
  #   # Hours of operation
  #   start_time: 23
  #   end_time: 6
  #   # A list of location types subject to closures during given hours
  #   locations:
  #     - House
  #     - Care Home
  #     - Agriculture
  #     - Extraction
  #     - Manufacturing
  #     - Energy
  #     - Water
  #     - Construction
  #     - Trade
  #     - Transport
  #     - Catering and Accommodation
  #     - ICT
  #     - Finance
  #     - Real Estate
  #     - Technical
  #     - Administration
  #     - Education
  #     - Entertainment
  #     - Other Services
  #     - Primary School
  #     - Secondary School
  #     - Restaurant
  #     - Outdoor
  #     - Car
  #     - Public Transport
  #     - Shop
  #     - Medical
  #     - Hotel
  #     - Place of Worship
  #     - Indoor Sport
  #     - Cinema or Theatre
  #     - Museum or Zoo
  #   # Unless an agent is in an exempt location, they are directed to the location at which they
  #   # perform the activity 'House':
  #   home_activity_type: House

  # # The interventions 'location_closure' refer to closure of all locations of a certain type. In the
  # # event that an agent would otherwise move to such a location, that move will be cancelled or
  # # overridden with the agent being sent home.
  # lockdown:
  #   __type__: location_closure.LocationClosures
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     15th March 2020: enable
  #   # A list of location type subject to possible closures, one of the notable exceptions being shops.
  #   # Whether or not a location is closed may depend on the activity in question (for example, visits
  #   # to care homes may be prohibited while residents and workers continue to be able to access the
  #   # care home.
  #   locations:
  #     - House
  #     - Agriculture
  #     - Extraction
  #     - Manufacturing
  #     - Energy
  #     - Water
  #     - Construction
  #     - Trade
  #     - Transport
  #     - Catering and Accommodation
  #     - ICT
  #     - Finance
  #     - Real Estate
  #     - Technical
  #     - Administration
  #     - Education
  #     - Entertainment
  #     - Other Services
  #     - Primary School
  #     - Secondary School
  #     - Restaurant
  #     - Outdoor
  #     - Car
  #     - Public Transport
  #     - Medical
  #     - Hotel
  #     - Place of Worship
  #     - Indoor Sport
  #     - Cinema or Theatre
  #     - Museum or Zoo
  #   # Unless an agent is in an exempt location, they are directed to the location at which they
  #   # perform the activity 'House':
  #   home_activity_type: House

  # location_closure_carehome:
  #   __type__: location_closure.CareHomeClosures
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     15th March 2020: enable
  #   # The care home locaton type:
  #   locations:
  #     - Care Home
  #   # Unless an agent is in an exempt location, they are directed to the location at which they
  #   # perform the activity 'House':
  #   home_activity_type: House
  #   # This particular location closure only restricts visits to care homes, meaning that those who
  #   # work at a care home can still access it:
  #   work_activity_type: Work

  # location_closure_shop:
  #   __type__: location_closure.ShopClosures
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     15th March 2020: enable
  #   # The shop locaton type:
  #   locations:
  #     - Shop
  #   # Proportion of shops to close:
  #   prob_close: 0.72
  #   # Unless an agent is in an exempt location, they are directed to the location at which they
  #   # perform the activity 'House':
  #   home_activity_type: House

  # # The intervention 'vaccination' refers to vaccination based on a strategy that prioritizes
  # # care home residents and workers, then frontline health workers and then the remainder of the
  # # population according to age, starting with the oldest. In this simple implementation, the
  # # vaccine causes either total or no immunity with a certain probability, requires two doses, and
  # # the effect is instantaneous. Also it is assumed that everybody wants to be vaccinated and that
  # # those who have tested positive will not be eligible for vaccination.
  # vaccination:
  #   __type__: multi_vaccination.MultiVaccination
  #   __prng_seed__: 10
  #   __enabled__: false
  #   __schedule__:
  #     1st March 2020: enable
  #     1st March 2021: {max_first_doses_per_day: {Vaccine_A: 450, Vaccine_B: 50}}
  #   # This controls how many first doses are able to be distributed per day. The total number
  #   # of doses per day will be this number plus the number of second doses delivered that day.
  #   max_first_doses_per_day: {Vaccine_A: 450, Vaccine_B: 50}
  #   # Vaccine hesitancy:
  #   age_low: 35
  #   age_high: 65
  #   prob_low: 0.54
  #   prob_med: 0.64
  #   prob_high: 0.86
  #   # Priority scheme parameters
  #   min_age: 16
  #   home_activity_type: House
  #   work_activity_type: Work
  #   care_home_location_type: [Care Home]
  #   hospital_location_type: [Hospital]
  #   # List of vaccines and their properties
  #   vaccines:
  #     Vaccine_A:
  #       # Number of doses for each individual receiving this vaccine
  #       number_of_doses: 2
  #       # Time between doses in days
  #       time_between_doses: 56
  #       # The probabilities that each dose induces immunity. Note that if the probability that the
  #       # first dose is successful is p_1 and the probability that the second dose is successful is
  #       # p_2 then the probability that the agent is immune after the second dose is
  #       # p_1 + (1-p_1)p_2.
  #       prob_first_dose_successful: 0.463
  #       prob_second_dose_successful: 0.175
  #       # Strains protected against by this vaccine
  #       targetted_strains: ['Alpha', 'Beta']
  #       # Duration of protection in days (None means indefinite duration)
  #       duration: None
  #     Vaccine_B:
  #       # Number of doses for each individual receiving this vaccine
  #       number_of_doses: 2
  #       # Time between doses in days
  #       time_between_doses: 21
  #       # The probabilities that each dose induces immunity. Note that if the probability that the
  #       # first dose is successful is p_1 and the probability that the second dose is successful is
  #       # p_2 then the probability that the agent is immune after the second dose is
  #       # p_1 + (1-p_1)p_2.
  #       prob_first_dose_successful: 0.900
  #       prob_second_dose_successful: 0.500
  #       # Strains protected against by this vaccine
  #       targetted_strains: ['Alpha', 'Beta']
  #       # Duration of protection in days (None means indefinite duration)
  #       duration: None
